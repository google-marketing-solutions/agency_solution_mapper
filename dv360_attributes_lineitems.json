{
  "tasks": [
    {
      "dataset": {
        "description": "Create the mapper_dv360 dataset.",
        "auth": "user",
        "dataset": "mapper_dv360"
      }
    },
    {
      "bigquery": {
        "description": "Create the Attributes_LineItems view.",
        "auth": "user",
        "from": {
          "query": "SELECT
   * EXCEPT(Value) REPLACE(CONCAT('LineItem: ', REPLACE(attribute, '_', ' ')) AS Attribute),
  CASE
    WHEN Attribute IN (
      'Creatives'
    ) THEN SAFE_DIVIDE(Value - MIN(Value) OVER(), MAX(Value) OVER(PARTITION BY advertiserId) - MIN(Value) OVER(PARTITION BY advertiserId))
    ELSE SAFE_DIVIDE(Value, MAX(Value) OVER(PARTITION BY advertiserId))
  END AS Score
FROM (
  SELECT
  partnerId,
  Partner,
  advertiserId,
  Advertiser,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_UNSPECIFIED') AS Line_Item_Type_Unspecified,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_DISPLAY_DEFAULT') AS Line_Item_Type_Display_Default,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL') AS Line_Item_Type_Display_Mobile_App_Install,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_VIDEO_DEFAULT') AS Line_Item_Type_Video_Default,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL') AS Line_Item_Type_Video_Mobile_App_Install,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INVENTORY') AS Line_Item_Type_Display_Mobile_App_Inventory,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INVENTORY') AS Line_Item_Type_Video_Mobile_App_Inventory,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_AUDIO_DEFAULT') AS Line_Item_Type_Audio_Default,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_VIDEO_OVER_THE_TOP') AS Line_Item_Type_Video_Over_The_Top,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_ACTION') AS Line_Item_Type_Youtube_And_Partners_Action,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_NON_SKIPPABLE') AS Line_Item_Type_Youtube_And_Partners_Non_Skippable,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_VIDEO_SEQUENCE') AS Line_Item_Type_Youtube_And_Partners_Video_Sequence,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_AUDIO') AS Line_Item_Type_Youtube_And_Partners_Audio,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_REACH') AS Line_Item_Type_Youtube_And_Partners_Reach,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_SIMPLE') AS Line_Item_Type_Youtube_And_Partners_Simple,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_NON_SKIPPABLE_OVER_THE_TOP') AS Line_Item_Type_Youtube_And_Partners_Non_Skippable_Over_The_Top,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_REACH_OVER_THE_TOP') AS Line_Item_Type_Youtube_And_Partners_Reach_Over_The_Top,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_SIMPLE_OVER_THE_TOP') AS Line_Item_Type_Youtube_And_Partners_Simple_Over_The_Top,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_TARGET_FREQUENCY') AS Line_Item_Type_Youtube_And_Partners_Target_Frequency,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_VIEW') AS Line_Item_Type_Youtube_And_Partners_View,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_DISPLAY_OUT_OF_HOME') AS Line_Item_Type_Display_Out_Of_Home,
  COUNTIF(lineItemType = 'LINE_ITEM_TYPE_VIDEO_OUT_OF_HOME') AS Line_Item_Type_Video_Out_Of_Home,
  COUNTIF(entityStatus = 'ENTITY_STATUS_UNSPECIFIED') AS Entity_Status_Unspecified,
  COUNTIF(entityStatus = 'ENTITY_STATUS_ACTIVE') AS Entity_Status_Active,
  COUNTIF(entityStatus = 'ENTITY_STATUS_DRAFT') AS Entity_Status_Draft,
  COUNTIF(entityStatus = 'ENTITY_STATUS_PAUSED') AS Entity_Status_Paused,
  COUNTIF(entityStatus = 'ENTITY_STATUS_SCHEDULED_FOR_DELETION') AS Entity_Status_Scheduled_For_Deletion,
  COUNTIF(TIMESTAMP_DIFF(CURRENT_TIMESTAMP(), TIMESTAMP(updateTime), DAY)  BETWEEN 0 AND 30) AS Update_Time_7,
  COUNTIF(TIMESTAMP_DIFF(CURRENT_TIMESTAMP(), TIMESTAMP(updateTime), DAY)  BETWEEN 0 AND 30) AS Update_Time_30,
  COUNTIF(TIMESTAMP_DIFF(CURRENT_TIMESTAMP(), TIMESTAMP(updateTime), DAY)  BETWEEN 0 AND 30) AS Update_Time_90,
  COUNTIF(TIMESTAMP_DIFF(CURRENT_TIMESTAMP(), TIMESTAMP(updateTime), DAY)  BETWEEN 0 AND 30) AS Update_Time_180,
  COUNTIF(TIMESTAMP_DIFF(CURRENT_TIMESTAMP(), TIMESTAMP(updateTime), DAY)  BETWEEN 0 AND 30) AS Update_Time_365,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_UNSPECIFIED')) AS Partner_Costs_Cost_Type_Unspecified,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_ADLOOX')) AS Partner_Costs_Cost_Type_Adloox,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_ADLOOX_PREBID')) AS Partner_Costs_Cost_Type_Adloox_Prebid,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_ADSAFE')) AS Partner_Costs_Cost_Type_Adsafe,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_ADXPOSE')) AS Partner_Costs_Cost_Type_Adxpose,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_AGGREGATE_KNOWLEDGE')) AS Partner_Costs_Cost_Type_Aggregate_Knowledge,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_AGENCY_TRADING_DESK')) AS Partner_Costs_Cost_Type_Agency_Trading_Desk,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_DV360_FEE')) AS Partner_Costs_Cost_Type_Dv360_Fee,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_COMSCORE_VCE')) AS Partner_Costs_Cost_Type_Comscore_Vce,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_DATA_MANAGEMENT_PLATFORM')) AS Partner_Costs_Cost_Type_Data_Management_Platform,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_DEFAULT')) AS Partner_Costs_Cost_Type_Default,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_DOUBLE_VERIFY')) AS Partner_Costs_Cost_Type_Double_Verify,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_DOUBLE_VERIFY_PREBID')) AS Partner_Costs_Cost_Type_Double_Verify_Prebid,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_EVIDON')) AS Partner_Costs_Cost_Type_Evidon,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_VIDEO')) AS Partner_Costs_Cost_Type_Integral_Ad_Science_Video,
  SUM((SELECT COUNT(costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_PREBID')) AS Partner_Costs_Cost_Type_Integral_Ad_Science_Prebid,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_MEDIA_COST_DATA')) AS Partner_Costs_Cost_Type_Media_Data,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_MOAT_VIDEO')) AS Partner_Costs_Cost_Type_Moat_Video,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_NIELSEN_DAR')) AS Partner_Costs_Cost_Type_Nielsen_Dar,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_SHOP_LOCAL')) AS Partner_Costs_Cost_Type_Shop_Local,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_TERACENT')) AS Partner_Costs_Cost_Type_Teracent,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_THIRD_PARTY_AD_SERVER')) AS Partner_Costs_Cost_Type_Third_Party_Ad_Server,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_TRUST_METRICS')) AS Partner_Costs_Cost_Type_Trust_Metrics,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_VIZU')) AS Partner_Costs_Cost_Type_Vizu,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_ADLINGO_FEE')) AS Partner_Costs_Cost_Type_Adlingo_Fee,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_CUSTOM_FEE_1')) AS Partner_Costs_Cost_Type_Custom_Fee_1,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_CUSTOM_FEE_2')) AS Partner_Costs_Cost_Type_Custom_Fee_2,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_CUSTOM_FEE_3')) AS Partner_Costs_Cost_Type_Custom_Fee_3,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_CUSTOM_FEE_4')) AS Partner_Costs_Cost_Type_Custom_Fee_4,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_CUSTOM_FEE_5')) AS Partner_Costs_Cost_Type_Custom_Fee_5,
  SUM((SELECT COUNT(DISTINCT costType) FROM UNNEST(partnerCosts) WHERE costType = 'PARTNER_COST_TYPE_SCIBIDS_FEE')) AS Partner_Costs_Cost_Type_Scibids_Fee,
  SUM((SELECT COUNT(DISTINCT feeType) FROM UNNEST(partnerCosts) WHERE feeType = 'PARTNER_COST_FEE_TYPE_UNSPECIFIED')) AS Partner_Costs_Fee_Type_Cost_Unspecified,
  SUM((SELECT COUNT(DISTINCT feeType) FROM UNNEST(partnerCosts) WHERE feeType = 'PARTNER_COST_FEE_TYPE_CPM_FEE')) AS Partner_Costs_Fee_Type_Cost_Cpm,
  SUM((SELECT COUNT(DISTINCT feeType) FROM UNNEST(partnerCosts) WHERE feeType = 'PARTNER_COST_FEE_TYPE_MEDIA_FEE')) AS Partner_Costs_Fee_Type_Cost_Media,
  SUM(ARRAY_LENGTH(partnerCosts)) AS Partner_Costs_Fee_Amount,
  SUM(ARRAY_LENGTH(partnerCosts)) AS Partner_Costs_Fee_Percentage_Millis,
  SUM((SELECT COUNT(DISTINCT invoiceType) FROM UNNEST(partnerCosts) WHERE invoiceType = 'PARTNER_COST_INVOICE_TYPE_UNSPECIFIED')) AS Partner_Costs_Invoice_Type_Cost_Unspecified,
  SUM((SELECT COUNT(DISTINCT invoiceType) FROM UNNEST(partnerCosts) WHERE invoiceType = 'PARTNER_COST_INVOICE_TYPE_DV360')) AS Partner_Costs_Invoice_Type_Cost_Dv360,
  SUM((SELECT COUNT(DISTINCT invoiceType) FROM UNNEST(partnerCosts) WHERE invoiceType = 'PARTNER_COST_INVOICE_TYPE_PARTNER')) AS Partner_Costs_Invoice_Type_Cost,
  COUNTIF(flight.flightDateType = 'LINE_ITEM_FLIGHT_DATE_TYPE_UNSPECIFIED') AS Flight_Date_Type_Line_Item_Unspecified,
  COUNTIF(flight.flightDateType = 'LINE_ITEM_FLIGHT_DATE_TYPE_INHERITED') AS Flight_Date_Type_Line_Item_Inherited,
  COUNTIF(flight.flightDateType = 'LINE_ITEM_FLIGHT_DATE_TYPE_CUSTOM') AS Flight_Date_Type_Line_Item_Custom,
  COUNT(DISTINCT flight.dateRange.startDate.year) AS Flight_Date_Range_Start_Year,
  COUNT(DISTINCT flight.dateRange.startDate.month) AS Flight_Date_Range_Start_Month,
  COUNT(DISTINCT flight.dateRange.startDate.day) AS Flight_Date_Range_Start_Day,
  COUNT(DISTINCT flight.dateRange.endDate.year) AS Flight_Date_Range_End_Year,
  COUNT(DISTINCT flight.dateRange.endDate.month) AS Flight_Date_Range_End_Month,
  COUNT(DISTINCT flight.dateRange.endDate.day) AS Flight_Date_Range_End_Day,
  COUNTIF(budget.budgetAllocationType = 'LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNSPECIFIED') AS Budget_Allocation_Type_Line_Item_Unspecified,
  COUNTIF(budget.budgetAllocationType = 'LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC') AS Budget_Allocation_Type_Line_Item_Automatic,
  COUNTIF(budget.budgetAllocationType = 'LINE_ITEM_BUDGET_ALLOCATION_TYPE_FIXED') AS Budget_Allocation_Type_Line_Item_Fixed,
  COUNTIF(budget.budgetAllocationType = 'LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNLIMITED') AS Budget_Allocation_Type_Line_Item_Unlimited,
  COUNTIF(budget.budgetUnit = 'BUDGET_UNIT_UNSPECIFIED') AS Budget_Unit_Unspecified,
  COUNTIF(budget.budgetUnit = 'BUDGET_UNIT_CURRENCY') AS Budget_Unit_Currency,
  COUNTIF(budget.budgetUnit = 'BUDGET_UNIT_IMPRESSIONS') AS Budget_Unit_Impressions,
  COUNT(DISTINCT budget.maxAmount) AS Budget_Max_Amount,
  COUNTIF(pacing.pacingPeriod = 'PACING_PERIOD_UNSPECIFIED') AS Pacing_Period_Unspecified,
  COUNTIF(pacing.pacingPeriod = 'PACING_PERIOD_DAILY') AS Pacing_Period_Daily,
  COUNTIF(pacing.pacingPeriod = 'PACING_PERIOD_FLIGHT') AS Pacing_Period_Flight,
  COUNTIF(pacing.pacingType = 'PACING_TYPE_UNSPECIFIED') AS Pacing_Type_Unspecified,
  COUNTIF(pacing.pacingType = 'PACING_TYPE_AHEAD') AS Pacing_Type_Ahead,
  COUNTIF(pacing.pacingType = 'PACING_TYPE_ASAP') AS Pacing_Type_Asap,
  COUNTIF(pacing.pacingType = 'PACING_TYPE_EVEN') AS Pacing_Type_Even,
  COUNT(DISTINCT pacing.dailyMaxMicros) AS Pacing_Daily_Max_Micros,
  COUNT(DISTINCT pacing.dailyMaxImpressions) AS Pacing_Daily_Max_Impressions,
  COUNTIF(frequencyCap.unlimited) AS Frequency_Cap_Unlimited,
  COUNTIF(frequencyCap.timeUnit = 'TIME_UNIT_UNSPECIFIED') AS Frequency_Cap_Time_Unit_Unspecified,
  COUNTIF(frequencyCap.timeUnit = 'TIME_UNIT_LIFETIME') AS Frequency_Cap_Time_Unit_Lifetime,
  COUNTIF(frequencyCap.timeUnit = 'TIME_UNIT_MONTHS') AS Frequency_Cap_Time_Unit_Months,
  COUNTIF(frequencyCap.timeUnit = 'TIME_UNIT_WEEKS') AS Frequency_Cap_Time_Unit_Weeks,
  COUNTIF(frequencyCap.timeUnit = 'TIME_UNIT_DAYS') AS Frequency_Cap_Time_Unit_Days,
  COUNTIF(frequencyCap.timeUnit = 'TIME_UNIT_HOURS') AS Frequency_Cap_Time_Unit_Hours,
  COUNTIF(frequencyCap.timeUnit = 'TIME_UNIT_MINUTES') AS Frequency_Cap_Time_Unit_Minutes,
  COUNT(DISTINCT frequencyCap.timeUnitCount) AS Frequency_Cap_Time_Unit_Count,
  COUNT(DISTINCT frequencyCap.maxImpressions) AS Frequency_Cap_Max_Impressions,
  COUNT(DISTINCT frequencyCap.maxViews) AS Frequency_Cap_Max_Views,
  COUNTIF(partnerRevenueModel.markupType = 'PARTNER_REVENUE_MODEL_MARKUP_TYPE_UNSPECIFIED') AS Partner_Revenue_Model_Markup_Type_Unspecified,
  COUNTIF(partnerRevenueModel.markupType = 'PARTNER_REVENUE_MODEL_MARKUP_TYPE_CPM') AS Partner_Revenue_Model_Markup_Type_Cpm,
  COUNTIF(partnerRevenueModel.markupType = 'PARTNER_REVENUE_MODEL_MARKUP_TYPE_MEDIA_COST_MARKUP') AS Partner_Revenue_Model_Markup_Type_Media_Cost,
  COUNTIF(partnerRevenueModel.markupType = 'PARTNER_REVENUE_MODEL_MARKUP_TYPE_TOTAL_MEDIA_COST_MARKUP') AS Partner_Revenue_Model_Markup_Type_Total_Media_Cost,
  COUNT(DISTINCT partnerRevenueModel.markupAmount) AS Partner_Revenue_Model_Markup_Amount,
  COUNT(DISTINCT conversionCounting.postViewCountPercentageMillis) AS Conversion_Counting_Post_View_Count_Percentage_Millis,
  SUM(ARRAY_LENGTH(conversionCounting.floodlightActivityConfigs)) AS Conversion_Counting_Floodlight_Activity_Configs,
  SUM(ARRAY_LENGTH(conversionCounting.floodlightActivityConfigs)) AS Conversion_Counting_Floodlight_Activity_Configs_Post_Click_Lookback_Window_Days,
  SUM(ARRAY_LENGTH(conversionCounting.floodlightActivityConfigs)) AS Conversion_Counting_Floodlight_Activity_Configs_Post_View_Lookback_Window_Days,
  SUM(ARRAY_LENGTH(creativeIds)) AS Creatives,
  COUNT(DISTINCT bidStrategy.fixedBid.bidAmountMicros) AS Bid_Strategy_Fixed_Amount_Micros,
  COUNTIF(bidStrategy.maximizeSpendAutoBid.performanceGoalType = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED') AS Bid_Strategy_Maximize_Spend_Auto_Performance_Goal_Type_Bidding_Unspecified,
  COUNTIF(bidStrategy.maximizeSpendAutoBid.performanceGoalType = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA') AS Bid_Strategy_Maximize_Spend_Auto_Performance_Goal_Type_Bidding_Cpa,
  COUNTIF(bidStrategy.maximizeSpendAutoBid.performanceGoalType = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC') AS Bid_Strategy_Maximize_Spend_Auto_Performance_Goal_Type_Bidding_Cpc,
  COUNTIF(bidStrategy.maximizeSpendAutoBid.performanceGoalType = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM') AS Bid_Strategy_Maximize_Spend_Auto_Performance_Goal_Type_Bidding_Viewable_Cpm,
  COUNTIF(bidStrategy.maximizeSpendAutoBid.performanceGoalType = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO') AS Bid_Strategy_Maximize_Spend_Auto_Performance_Goal_Type_Bidding_Custom_Algo,
  COUNTIF(bidStrategy.maximizeSpendAutoBid.performanceGoalType = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA') AS Bid_Strategy_Maximize_Spend_Auto_Performance_Goal_Type_Bidding_Civa,
  COUNTIF(bidStrategy.maximizeSpendAutoBid.performanceGoalType = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN') AS Bid_Strategy_Maximize_Spend_Auto_Performance_Goal_Type_Bidding_Ivo_Ten,
  COUNTIF(bidStrategy.maximizeSpendAutoBid.performanceGoalType = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED') AS Bid_Strategy_Maximize_Spend_Auto_Performance_Goal_Type_Bidding_Av_Viewed,
  COUNT(DISTINCT bidStrategy.maximizeSpendAutoBid.maxAverageCpmBidAmountMicros) AS Bid_Strategy_Maximize_Spend_Auto_Max_Average_Cpm_Amount_Micros,
  COUNTIF(bidStrategy.maximizeSpendAutoBid.raiseBidForDeals) AS Bid_Strategy_Maximize_Spend_Auto_Raise_For_Deals,
  COUNT(DISTINCT bidStrategy.maximizeSpendAutoBid.customBiddingAlgorithmId) AS Bid_Strategy_Maximize_Spend_Auto_Custom_Bidding_Algorithm,
  COUNTIF(bidStrategy.performanceGoalAutoBid.performanceGoalType = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED') AS Bid_Strategy_Performance_Goal_Auto_Type_Bidding_Unspecified,
  COUNTIF(bidStrategy.performanceGoalAutoBid.performanceGoalType = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA') AS Bid_Strategy_Performance_Goal_Auto_Type_Bidding_Cpa,
  COUNTIF(bidStrategy.performanceGoalAutoBid.performanceGoalType = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC') AS Bid_Strategy_Performance_Goal_Auto_Type_Bidding_Cpc,
  COUNTIF(bidStrategy.performanceGoalAutoBid.performanceGoalType = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM') AS Bid_Strategy_Performance_Goal_Auto_Type_Bidding_Viewable_Cpm,
  COUNTIF(bidStrategy.performanceGoalAutoBid.performanceGoalType = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO') AS Bid_Strategy_Performance_Goal_Auto_Type_Bidding_Custom_Algo,
  COUNTIF(bidStrategy.performanceGoalAutoBid.performanceGoalType = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA') AS Bid_Strategy_Performance_Goal_Auto_Type_Bidding_Civa,
  COUNTIF(bidStrategy.performanceGoalAutoBid.performanceGoalType = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN') AS Bid_Strategy_Performance_Goal_Auto_Type_Bidding_Ivo_Ten,
  COUNTIF(bidStrategy.performanceGoalAutoBid.performanceGoalType = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED') AS Bid_Strategy_Performance_Goal_Auto_Type_Bidding_Av_Viewed,
  COUNT(DISTINCT bidStrategy.performanceGoalAutoBid.performanceGoalAmountMicros) AS Bid_Strategy_Performance_Goal_Auto_Amount_Micros,
  COUNT(DISTINCT bidStrategy.performanceGoalAutoBid.maxAverageCpmBidAmountMicros) AS Bid_Strategy_Performance_Goal_Auto_Max_Average_Cpm_Amount_Micros,
  COUNT(DISTINCT bidStrategy.performanceGoalAutoBid.customBiddingAlgorithmId) AS Bid_Strategy_Performance_Goal_Auto_Custom_Bidding_Algorithm,
  COUNTIF(bidStrategy.youtubeAndPartnersBid.type = 'YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_UNSPECIFIED') AS Bid_Strategy_Youtube_And_Partners_Type_Bidding_Unspecified,
  COUNTIF(bidStrategy.youtubeAndPartnersBid.type = 'YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPV') AS Bid_Strategy_Youtube_And_Partners_Type_Bidding_Manual_Cpv,
  COUNTIF(bidStrategy.youtubeAndPartnersBid.type = 'YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPM') AS Bid_Strategy_Youtube_And_Partners_Type_Bidding_Manual_Cpm,
  COUNTIF(bidStrategy.youtubeAndPartnersBid.type = 'YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPA') AS Bid_Strategy_Youtube_And_Partners_Type_Bidding_Target_Cpa,
  COUNTIF(bidStrategy.youtubeAndPartnersBid.type = 'YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPM') AS Bid_Strategy_Youtube_And_Partners_Type_Bidding_Target_Cpm,
  COUNTIF(bidStrategy.youtubeAndPartnersBid.type = 'YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_RESERVE_CPM') AS Bid_Strategy_Youtube_And_Partners_Type_Bidding_Reserve_Cpm,
  COUNTIF(bidStrategy.youtubeAndPartnersBid.type = 'YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MAXIMIZE_LIFT') AS Bid_Strategy_Youtube_And_Partners_Type_Bidding_Maximize_Lift,
  COUNTIF(bidStrategy.youtubeAndPartnersBid.type = 'YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MAXIMIZE_CONVERSIONS') AS Bid_Strategy_Youtube_And_Partners_Type_Bidding_Maximize_Conversions,
  COUNTIF(bidStrategy.youtubeAndPartnersBid.type = 'YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPV') AS Bid_Strategy_Youtube_And_Partners_Type_Bidding_Target_Cpv,
  COUNTIF(bidStrategy.youtubeAndPartnersBid.type = 'YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_ROAS') AS Bid_Strategy_Youtube_And_Partners_Type_Bidding_Target_Roas,
  COUNTIF(bidStrategy.youtubeAndPartnersBid.type = 'YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MAXIMIZE_CONVERSION_VALUE') AS Bid_Strategy_Youtube_And_Partners_Type_Bidding_Maximize_Conversion_Value,
  COUNT(DISTINCT bidStrategy.youtubeAndPartnersBid.value) AS Bid_Strategy_Youtube_And_Partners_Value,
  COUNT(DISTINCT bidStrategy.youtubeAndPartnersBid.adGroupEffectiveTargetCpaValue) AS Bid_Strategy_Youtube_And_Partners_Ad_Group_Effective_Target_Cpa_Value,
  COUNTIF(bidStrategy.youtubeAndPartnersBid.adGroupEffectiveTargetCpaSource = 'BIDDING_SOURCE_UNSPECIFIED') AS Bid_Strategy_Youtube_And_Partners_Ad_Group_Effective_Target_Cpa_Source_Bidding_Unspecified,
  COUNTIF(bidStrategy.youtubeAndPartnersBid.adGroupEffectiveTargetCpaSource = 'BIDDING_SOURCE_LINE_ITEM') AS Bid_Strategy_Youtube_And_Partners_Ad_Group_Effective_Target_Cpa_Source_Bidding_Line_Item,
  COUNTIF(bidStrategy.youtubeAndPartnersBid.adGroupEffectiveTargetCpaSource = 'BIDDING_SOURCE_AD_GROUP') AS Bid_Strategy_Youtube_And_Partners_Ad_Group_Effective_Target_Cpa_Source_Bidding,
  COUNT(DISTINCT integrationDetails.integrationCode) AS Integration_Details_Code,
  COUNT(DISTINCT integrationDetails.details) AS Integration_Details,
  COUNTIF(targetingExpansion.enableOptimizedTargeting) AS Targeting_Expansion_Enable_Optimized,
  COUNTIF(targetingExpansion.audienceExpansionSeedListExcluded) AS Targeting_Expansion_Audience_Seed_List_Excluded,
  COUNTIF(targetingExpansion.audienceExpansionLevel = 'UNKNOWN') AS Targeting_Expansion_Audience_Level_Unknown,
  COUNTIF(targetingExpansion.audienceExpansionLevel = 'NO_REACH') AS Targeting_Expansion_Audience_Level_No_Reach,
  COUNTIF(targetingExpansion.audienceExpansionLevel = 'LEAST_REACH') AS Targeting_Expansion_Audience_Level_Least_Reach,
  COUNTIF(targetingExpansion.audienceExpansionLevel = 'MID_REACH') AS Targeting_Expansion_Audience_Level_Mid_Reach,
  COUNTIF(targetingExpansion.audienceExpansionLevel = 'MOST_REACH') AS Targeting_Expansion_Audience_Level_Most_Reach,
  SUM(ARRAY_LENGTH(warningMessages)) AS Warning_Messages,
  COUNT(DISTINCT mobileApp.appId) AS Mobile_App,
  COUNTIF(mobileApp.platform = 'PLATFORM_UNSPECIFIED') AS Mobile_App_Platform_Unspecified,
  COUNTIF(mobileApp.platform = 'IOS') AS Mobile_App_Platform_Ios,
  COUNTIF(mobileApp.platform = 'ANDROID') AS Mobile_App_Platform_Android,
  COUNT(DISTINCT mobileApp.displayName) AS Mobile_App_Display_Name,
  COUNT(DISTINCT mobileApp.publisher) AS Mobile_App_Publisher,
  COUNTIF(reservationType = 'RESERVATION_TYPE_UNSPECIFIED') AS Reservation_Type_Unspecified,
  COUNTIF(reservationType = 'RESERVATION_TYPE_NOT_GUARANTEED') AS Reservation_Type_Not_Guaranteed,
  COUNTIF(reservationType = 'RESERVATION_TYPE_PROGRAMMATIC_GUARANTEED') AS Reservation_Type_Programmatic_Guaranteed,
  COUNTIF(reservationType = 'RESERVATION_TYPE_TAG_GUARANTEED') AS Reservation_Type_Tag_Guaranteed,
  COUNTIF(reservationType = 'RESERVATION_TYPE_PETRA_VIRAL') AS Reservation_Type_Petra_Viral,
  COUNTIF(reservationType = 'RESERVATION_TYPE_INSTANT_RESERVE') AS Reservation_Type_Instant_Reserve,
  COUNTIF(excludeNewExchanges) AS Exclude_New_Exchanges,
  COUNTIF(youtubeAndPartnersSettings.viewFrequencyCap.unlimited) AS Youtube_And_Partners_Settings_View_Frequency_Cap_Unlimited,
  COUNTIF(youtubeAndPartnersSettings.viewFrequencyCap.timeUnit = 'TIME_UNIT_UNSPECIFIED') AS Youtube_And_Partners_Settings_View_Frequency_Cap_Time_Unit_Unspecified,
  COUNTIF(youtubeAndPartnersSettings.viewFrequencyCap.timeUnit = 'TIME_UNIT_LIFETIME') AS Youtube_And_Partners_Settings_View_Frequency_Cap_Time_Unit_Lifetime,
  COUNTIF(youtubeAndPartnersSettings.viewFrequencyCap.timeUnit = 'TIME_UNIT_MONTHS') AS Youtube_And_Partners_Settings_View_Frequency_Cap_Time_Unit_Months,
  COUNTIF(youtubeAndPartnersSettings.viewFrequencyCap.timeUnit = 'TIME_UNIT_WEEKS') AS Youtube_And_Partners_Settings_View_Frequency_Cap_Time_Unit_Weeks,
  COUNTIF(youtubeAndPartnersSettings.viewFrequencyCap.timeUnit = 'TIME_UNIT_DAYS') AS Youtube_And_Partners_Settings_View_Frequency_Cap_Time_Unit_Days,
  COUNTIF(youtubeAndPartnersSettings.viewFrequencyCap.timeUnit = 'TIME_UNIT_HOURS') AS Youtube_And_Partners_Settings_View_Frequency_Cap_Time_Unit_Hours,
  COUNTIF(youtubeAndPartnersSettings.viewFrequencyCap.timeUnit = 'TIME_UNIT_MINUTES') AS Youtube_And_Partners_Settings_View_Frequency_Cap_Time_Unit_Minutes,
  COUNT(DISTINCT youtubeAndPartnersSettings.viewFrequencyCap.timeUnitCount) AS Youtube_And_Partners_Settings_View_Frequency_Cap_Time_Unit_Count,
  COUNT(DISTINCT youtubeAndPartnersSettings.viewFrequencyCap.maxImpressions) AS Youtube_And_Partners_Settings_View_Frequency_Cap_Max_Impressions,
  COUNT(DISTINCT youtubeAndPartnersSettings.viewFrequencyCap.maxViews) AS Youtube_And_Partners_Settings_View_Frequency_Cap_Max_Views,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.viewabilityVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_UNSPECIFIED')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Unspecified,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.viewabilityVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_MOAT')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Moat,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.viewabilityVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_DOUBLE_VERIFY')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Double_Verify,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.viewabilityVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Integral_Ad_Science,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.viewabilityVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_COMSCORE')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Comscore,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.viewabilityVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_TELEMETRY')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Telemetry,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.viewabilityVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_MEETRICS')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Meetrics,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.viewabilityVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_ZEFR')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Zefr,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.viewabilityVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_NIELSEN')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Nielsen,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.viewabilityVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_KANTAR')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Kantar,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.viewabilityVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_DYNATA')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Dynata,
  SUM(ARRAY_LENGTH(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.viewabilityVendorConfigs)) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Placement,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandSafetyVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_UNSPECIFIED')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Unspecified,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandSafetyVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_MOAT')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Moat,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandSafetyVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_DOUBLE_VERIFY')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Double_Verify,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandSafetyVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Integral_Ad_Science,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandSafetyVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_COMSCORE')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Comscore,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandSafetyVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_TELEMETRY')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Telemetry,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandSafetyVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_MEETRICS')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Meetrics,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandSafetyVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_ZEFR')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Zefr,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandSafetyVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_NIELSEN')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Nielsen,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandSafetyVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_KANTAR')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Kantar,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandSafetyVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_DYNATA')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Dynata,
  SUM(ARRAY_LENGTH(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandSafetyVendorConfigs)) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Placement,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.reachVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_UNSPECIFIED')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Unspecified,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.reachVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_MOAT')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Moat,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.reachVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_DOUBLE_VERIFY')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Double_Verify,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.reachVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Integral_Ad_Science,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.reachVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_COMSCORE')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Comscore,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.reachVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_TELEMETRY')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Telemetry,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.reachVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_MEETRICS')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Meetrics,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.reachVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_ZEFR')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Zefr,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.reachVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_NIELSEN')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Nielsen,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.reachVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_KANTAR')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Kantar,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.reachVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_DYNATA')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Dynata,
  SUM(ARRAY_LENGTH(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.reachVendorConfigs)) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Placement,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandLiftVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_UNSPECIFIED')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Unspecified,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandLiftVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_MOAT')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Moat,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandLiftVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_DOUBLE_VERIFY')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Double_Verify,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandLiftVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Integral_Ad_Science,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandLiftVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_COMSCORE')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Comscore,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandLiftVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_TELEMETRY')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Telemetry,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandLiftVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_MEETRICS')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Meetrics,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandLiftVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_ZEFR')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Zefr,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandLiftVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_NIELSEN')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Nielsen,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandLiftVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_KANTAR')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Kantar,
  SUM((SELECT COUNT(DISTINCT vendor) FROM UNNEST(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandLiftVendorConfigs) WHERE vendor = 'THIRD_PARTY_VENDOR_DYNATA')) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Dynata,
  SUM(ARRAY_LENGTH(youtubeAndPartnersSettings.thirdPartyMeasurementConfigs.brandLiftVendorConfigs)) AS Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Placement,
  COUNTIF(youtubeAndPartnersSettings.inventorySourceSettings.includeYoutube) AS Youtube_And_Partners_Settings_Inventory_Source_Include,
  COUNTIF(youtubeAndPartnersSettings.inventorySourceSettings.includeGoogleTv) AS Youtube_And_Partners_Settings_Inventory_Source_Include_Google_Tv,
  COUNTIF(youtubeAndPartnersSettings.inventorySourceSettings.includeYoutubeVideoPartners) AS Youtube_And_Partners_Settings_Inventory_Source_Include_Video,
  COUNTIF(youtubeAndPartnersSettings.contentCategory = 'YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_UNSPECIFIED') AS Youtube_And_Partners_Settings_Content_Category_Unspecified,
  COUNTIF(youtubeAndPartnersSettings.contentCategory = 'YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_STANDARD') AS Youtube_And_Partners_Settings_Content_Category_Standard,
  COUNTIF(youtubeAndPartnersSettings.contentCategory = 'YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_EXPANDED') AS Youtube_And_Partners_Settings_Content_Category_Expanded,
  COUNTIF(youtubeAndPartnersSettings.contentCategory = 'YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_LIMITED') AS Youtube_And_Partners_Settings_Content_Category_Limited,
  COUNTIF(youtubeAndPartnersSettings.effectiveContentCategory = 'YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_UNSPECIFIED') AS Youtube_And_Partners_Settings_Effective_Content_Category_Unspecified,
  COUNTIF(youtubeAndPartnersSettings.effectiveContentCategory = 'YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_STANDARD') AS Youtube_And_Partners_Settings_Effective_Content_Category_Standard,
  COUNTIF(youtubeAndPartnersSettings.effectiveContentCategory = 'YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_EXPANDED') AS Youtube_And_Partners_Settings_Effective_Content_Category_Expanded,
  COUNTIF(youtubeAndPartnersSettings.effectiveContentCategory = 'YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_LIMITED') AS Youtube_And_Partners_Settings_Effective_Content_Category_Limited,
  COUNT(DISTINCT youtubeAndPartnersSettings.targetFrequency.targetCount) AS Youtube_And_Partners_Settings_Target_Frequency_Count,
  COUNTIF(youtubeAndPartnersSettings.targetFrequency.timeUnit = 'TIME_UNIT_UNSPECIFIED') AS Youtube_And_Partners_Settings_Target_Frequency_Time_Unit_Unspecified,
  COUNTIF(youtubeAndPartnersSettings.targetFrequency.timeUnit = 'TIME_UNIT_LIFETIME') AS Youtube_And_Partners_Settings_Target_Frequency_Time_Unit_Lifetime,
  COUNTIF(youtubeAndPartnersSettings.targetFrequency.timeUnit = 'TIME_UNIT_MONTHS') AS Youtube_And_Partners_Settings_Target_Frequency_Time_Unit_Months,
  COUNTIF(youtubeAndPartnersSettings.targetFrequency.timeUnit = 'TIME_UNIT_WEEKS') AS Youtube_And_Partners_Settings_Target_Frequency_Time_Unit_Weeks,
  COUNTIF(youtubeAndPartnersSettings.targetFrequency.timeUnit = 'TIME_UNIT_DAYS') AS Youtube_And_Partners_Settings_Target_Frequency_Time_Unit_Days,
  COUNTIF(youtubeAndPartnersSettings.targetFrequency.timeUnit = 'TIME_UNIT_HOURS') AS Youtube_And_Partners_Settings_Target_Frequency_Time_Unit_Hours,
  COUNTIF(youtubeAndPartnersSettings.targetFrequency.timeUnit = 'TIME_UNIT_MINUTES') AS Youtube_And_Partners_Settings_Target_Frequency_Time_Unit_Minutes,
  COUNT(DISTINCT youtubeAndPartnersSettings.targetFrequency.timeUnitCount) AS Youtube_And_Partners_Settings_Target_Frequency_Time_Unit_Count,
  COUNT(DISTINCT youtubeAndPartnersSettings.linkedMerchantId) AS Youtube_And_Partners_Settings_Linked_Merchant,
  SUM(ARRAY_LENGTH(youtubeAndPartnersSettings.relatedVideoIds)) AS Youtube_And_Partners_Settings_Related_Videos,
  COUNT(DISTINCT youtubeAndPartnersSettings.leadFormId) AS Youtube_And_Partners_Settings_Lead_Form,
  COUNTIF(youtubeAndPartnersSettings.videoAdSequenceSettings.minimumDuration = 'VIDEO_AD_SEQUENCE_MINIMUM_DURATION_UNSPECIFIED') AS Youtube_And_Partners_Settings_Video_Ad_Sequence_Minimum_Duration_Unspecified,
  COUNTIF(youtubeAndPartnersSettings.videoAdSequenceSettings.minimumDuration = 'VIDEO_AD_SEQUENCE_MINIMUM_DURATION_WEEK') AS Youtube_And_Partners_Settings_Video_Ad_Sequence_Minimum_Duration_Week,
  COUNTIF(youtubeAndPartnersSettings.videoAdSequenceSettings.minimumDuration = 'VIDEO_AD_SEQUENCE_MINIMUM_DURATION_MONTH') AS Youtube_And_Partners_Settings_Video_Ad_Sequence_Minimum_Duration_Month,
  SUM(ARRAY_LENGTH(youtubeAndPartnersSettings.videoAdSequenceSettings.steps)) AS Youtube_And_Partners_Settings_Video_Ad_Sequence_Steps_Step,
  SUM(ARRAY_LENGTH(youtubeAndPartnersSettings.videoAdSequenceSettings.steps)) AS Youtube_And_Partners_Settings_Video_Ad_Sequence_Steps_Group,
  SUM(ARRAY_LENGTH(youtubeAndPartnersSettings.videoAdSequenceSettings.steps)) AS Youtube_And_Partners_Settings_Video_Ad_Sequence_Steps_Previous_Step,
  SUM((SELECT COUNT(DISTINCT interactionType) FROM UNNEST(youtubeAndPartnersSettings.videoAdSequenceSettings.steps) WHERE interactionType = 'INTERACTION_TYPE_UNSPECIFIED')) AS Youtube_And_Partners_Settings_Video_Ad_Sequence_Steps_Interaction_Type_Unspecified,
  SUM((SELECT COUNT(DISTINCT interactionType) FROM UNNEST(youtubeAndPartnersSettings.videoAdSequenceSettings.steps) WHERE interactionType = 'INTERACTION_TYPE_PAID_VIEW')) AS Youtube_And_Partners_Settings_Video_Ad_Sequence_Steps_Interaction_Type_Paid_View,
  SUM((SELECT COUNT(DISTINCT interactionType) FROM UNNEST(youtubeAndPartnersSettings.videoAdSequenceSettings.steps) WHERE interactionType = 'INTERACTION_TYPE_SKIP')) AS Youtube_And_Partners_Settings_Video_Ad_Sequence_Steps_Interaction_Type_Skip,
  SUM((SELECT COUNT(DISTINCT interactionType) FROM UNNEST(youtubeAndPartnersSettings.videoAdSequenceSettings.steps) WHERE interactionType = 'INTERACTION_TYPE_IMPRESSION')) AS Youtube_And_Partners_Settings_Video_Ad_Sequence_Steps_Interaction_Type_Impression,
  SUM((SELECT COUNT(DISTINCT interactionType) FROM UNNEST(youtubeAndPartnersSettings.videoAdSequenceSettings.steps) WHERE interactionType = 'INTERACTION_TYPE_ENGAGED_IMPRESSION')) AS Youtube_And_Partners_Settings_Video_Ad_Sequence_Steps_Interaction_Type_Engaged_Impression,
  FROM `mapper_dv360.DV360_LineItems`
  LEFT JOIN (SELECT partnerId, advertiserId, CONCAT(displayName, ' - ', advertiserId) AS Advertiser FROM `mapper_dv360.DV360_Advertisers`) USING(advertiserId)
  LEFT JOIN (SELECT partnerId, CONCAT(displayName, ' - ', partnerId) AS Partner FROM `mapper_dv360.DV360_Partners`) USING(partnerId)
  WHERE entityStatus != 'ENTITY_STATUS_ARCHIVED'
  GROUP BY 1,2,3,4 
)
UNPIVOT(Value FOR Attribute IN (Line_Item_Type_Unspecified, Line_Item_Type_Display_Default, Line_Item_Type_Display_Mobile_App_Install, Line_Item_Type_Video_Default, Line_Item_Type_Video_Mobile_App_Install, Line_Item_Type_Display_Mobile_App_Inventory, Line_Item_Type_Video_Mobile_App_Inventory, Line_Item_Type_Audio_Default, Line_Item_Type_Video_Over_The_Top, Line_Item_Type_Youtube_And_Partners_Action, Line_Item_Type_Youtube_And_Partners_Non_Skippable, Line_Item_Type_Youtube_And_Partners_Video_Sequence, Line_Item_Type_Youtube_And_Partners_Audio, Line_Item_Type_Youtube_And_Partners_Reach, Line_Item_Type_Youtube_And_Partners_Simple, Line_Item_Type_Youtube_And_Partners_Non_Skippable_Over_The_Top, Line_Item_Type_Youtube_And_Partners_Reach_Over_The_Top, Line_Item_Type_Youtube_And_Partners_Simple_Over_The_Top, Line_Item_Type_Youtube_And_Partners_Target_Frequency, Line_Item_Type_Youtube_And_Partners_View, Line_Item_Type_Display_Out_Of_Home, Line_Item_Type_Video_Out_Of_Home, Entity_Status_Unspecified, Entity_Status_Active, Entity_Status_Draft, Entity_Status_Paused, Entity_Status_Scheduled_For_Deletion, Update_Time_7, Update_Time_30, Update_Time_90, Update_Time_180, Update_Time_365, Partner_Costs_Cost_Type_Unspecified, Partner_Costs_Cost_Type_Adloox, Partner_Costs_Cost_Type_Adloox_Prebid, Partner_Costs_Cost_Type_Adsafe, Partner_Costs_Cost_Type_Adxpose, Partner_Costs_Cost_Type_Aggregate_Knowledge, Partner_Costs_Cost_Type_Agency_Trading_Desk, Partner_Costs_Cost_Type_Dv360_Fee, Partner_Costs_Cost_Type_Comscore_Vce, Partner_Costs_Cost_Type_Data_Management_Platform, Partner_Costs_Cost_Type_Default, Partner_Costs_Cost_Type_Double_Verify, Partner_Costs_Cost_Type_Double_Verify_Prebid, Partner_Costs_Cost_Type_Evidon, Partner_Costs_Cost_Type_Integral_Ad_Science_Video, Partner_Costs_Cost_Type_Integral_Ad_Science_Prebid, Partner_Costs_Cost_Type_Media_Data, Partner_Costs_Cost_Type_Moat_Video, Partner_Costs_Cost_Type_Nielsen_Dar, Partner_Costs_Cost_Type_Shop_Local, Partner_Costs_Cost_Type_Teracent, Partner_Costs_Cost_Type_Third_Party_Ad_Server, Partner_Costs_Cost_Type_Trust_Metrics, Partner_Costs_Cost_Type_Vizu, Partner_Costs_Cost_Type_Adlingo_Fee, Partner_Costs_Cost_Type_Custom_Fee_1, Partner_Costs_Cost_Type_Custom_Fee_2, Partner_Costs_Cost_Type_Custom_Fee_3, Partner_Costs_Cost_Type_Custom_Fee_4, Partner_Costs_Cost_Type_Custom_Fee_5, Partner_Costs_Cost_Type_Scibids_Fee, Partner_Costs_Fee_Type_Cost_Unspecified, Partner_Costs_Fee_Type_Cost_Cpm, Partner_Costs_Fee_Type_Cost_Media, Partner_Costs_Fee_Amount, Partner_Costs_Fee_Percentage_Millis, Partner_Costs_Invoice_Type_Cost_Unspecified, Partner_Costs_Invoice_Type_Cost_Dv360, Partner_Costs_Invoice_Type_Cost, Flight_Date_Type_Line_Item_Unspecified, Flight_Date_Type_Line_Item_Inherited, Flight_Date_Type_Line_Item_Custom, Flight_Date_Range_Start_Year, Flight_Date_Range_Start_Month, Flight_Date_Range_Start_Day, Flight_Date_Range_End_Year, Flight_Date_Range_End_Month, Flight_Date_Range_End_Day, Budget_Allocation_Type_Line_Item_Unspecified, Budget_Allocation_Type_Line_Item_Automatic, Budget_Allocation_Type_Line_Item_Fixed, Budget_Allocation_Type_Line_Item_Unlimited, Budget_Unit_Unspecified, Budget_Unit_Currency, Budget_Unit_Impressions, Budget_Max_Amount, Pacing_Period_Unspecified, Pacing_Period_Daily, Pacing_Period_Flight, Pacing_Type_Unspecified, Pacing_Type_Ahead, Pacing_Type_Asap, Pacing_Type_Even, Pacing_Daily_Max_Micros, Pacing_Daily_Max_Impressions, Frequency_Cap_Unlimited, Frequency_Cap_Time_Unit_Unspecified, Frequency_Cap_Time_Unit_Lifetime, Frequency_Cap_Time_Unit_Months, Frequency_Cap_Time_Unit_Weeks, Frequency_Cap_Time_Unit_Days, Frequency_Cap_Time_Unit_Hours, Frequency_Cap_Time_Unit_Minutes, Frequency_Cap_Time_Unit_Count, Frequency_Cap_Max_Impressions, Frequency_Cap_Max_Views, Partner_Revenue_Model_Markup_Type_Unspecified, Partner_Revenue_Model_Markup_Type_Cpm, Partner_Revenue_Model_Markup_Type_Media_Cost, Partner_Revenue_Model_Markup_Type_Total_Media_Cost, Partner_Revenue_Model_Markup_Amount, Conversion_Counting_Post_View_Count_Percentage_Millis, Conversion_Counting_Floodlight_Activity_Configs, Conversion_Counting_Floodlight_Activity_Configs_Post_Click_Lookback_Window_Days, Conversion_Counting_Floodlight_Activity_Configs_Post_View_Lookback_Window_Days, Creatives, Bid_Strategy_Fixed_Amount_Micros, Bid_Strategy_Maximize_Spend_Auto_Performance_Goal_Type_Bidding_Unspecified, Bid_Strategy_Maximize_Spend_Auto_Performance_Goal_Type_Bidding_Cpa, Bid_Strategy_Maximize_Spend_Auto_Performance_Goal_Type_Bidding_Cpc, Bid_Strategy_Maximize_Spend_Auto_Performance_Goal_Type_Bidding_Viewable_Cpm, Bid_Strategy_Maximize_Spend_Auto_Performance_Goal_Type_Bidding_Custom_Algo, Bid_Strategy_Maximize_Spend_Auto_Performance_Goal_Type_Bidding_Civa, Bid_Strategy_Maximize_Spend_Auto_Performance_Goal_Type_Bidding_Ivo_Ten, Bid_Strategy_Maximize_Spend_Auto_Performance_Goal_Type_Bidding_Av_Viewed, Bid_Strategy_Maximize_Spend_Auto_Max_Average_Cpm_Amount_Micros, Bid_Strategy_Maximize_Spend_Auto_Raise_For_Deals, Bid_Strategy_Maximize_Spend_Auto_Custom_Bidding_Algorithm, Bid_Strategy_Performance_Goal_Auto_Type_Bidding_Unspecified, Bid_Strategy_Performance_Goal_Auto_Type_Bidding_Cpa, Bid_Strategy_Performance_Goal_Auto_Type_Bidding_Cpc, Bid_Strategy_Performance_Goal_Auto_Type_Bidding_Viewable_Cpm, Bid_Strategy_Performance_Goal_Auto_Type_Bidding_Custom_Algo, Bid_Strategy_Performance_Goal_Auto_Type_Bidding_Civa, Bid_Strategy_Performance_Goal_Auto_Type_Bidding_Ivo_Ten, Bid_Strategy_Performance_Goal_Auto_Type_Bidding_Av_Viewed, Bid_Strategy_Performance_Goal_Auto_Amount_Micros, Bid_Strategy_Performance_Goal_Auto_Max_Average_Cpm_Amount_Micros, Bid_Strategy_Performance_Goal_Auto_Custom_Bidding_Algorithm, Bid_Strategy_Youtube_And_Partners_Type_Bidding_Unspecified, Bid_Strategy_Youtube_And_Partners_Type_Bidding_Manual_Cpv, Bid_Strategy_Youtube_And_Partners_Type_Bidding_Manual_Cpm, Bid_Strategy_Youtube_And_Partners_Type_Bidding_Target_Cpa, Bid_Strategy_Youtube_And_Partners_Type_Bidding_Target_Cpm, Bid_Strategy_Youtube_And_Partners_Type_Bidding_Reserve_Cpm, Bid_Strategy_Youtube_And_Partners_Type_Bidding_Maximize_Lift, Bid_Strategy_Youtube_And_Partners_Type_Bidding_Maximize_Conversions, Bid_Strategy_Youtube_And_Partners_Type_Bidding_Target_Cpv, Bid_Strategy_Youtube_And_Partners_Type_Bidding_Target_Roas, Bid_Strategy_Youtube_And_Partners_Type_Bidding_Maximize_Conversion_Value, Bid_Strategy_Youtube_And_Partners_Value, Bid_Strategy_Youtube_And_Partners_Ad_Group_Effective_Target_Cpa_Value, Bid_Strategy_Youtube_And_Partners_Ad_Group_Effective_Target_Cpa_Source_Bidding_Unspecified, Bid_Strategy_Youtube_And_Partners_Ad_Group_Effective_Target_Cpa_Source_Bidding_Line_Item, Bid_Strategy_Youtube_And_Partners_Ad_Group_Effective_Target_Cpa_Source_Bidding, Integration_Details_Code, Integration_Details, Targeting_Expansion_Enable_Optimized, Targeting_Expansion_Audience_Seed_List_Excluded, Targeting_Expansion_Audience_Level_Unknown, Targeting_Expansion_Audience_Level_No_Reach, Targeting_Expansion_Audience_Level_Least_Reach, Targeting_Expansion_Audience_Level_Mid_Reach, Targeting_Expansion_Audience_Level_Most_Reach, Warning_Messages, Mobile_App, Mobile_App_Platform_Unspecified, Mobile_App_Platform_Ios, Mobile_App_Platform_Android, Mobile_App_Display_Name, Mobile_App_Publisher, Reservation_Type_Unspecified, Reservation_Type_Not_Guaranteed, Reservation_Type_Programmatic_Guaranteed, Reservation_Type_Tag_Guaranteed, Reservation_Type_Petra_Viral, Reservation_Type_Instant_Reserve, Exclude_New_Exchanges, Youtube_And_Partners_Settings_View_Frequency_Cap_Unlimited, Youtube_And_Partners_Settings_View_Frequency_Cap_Time_Unit_Unspecified, Youtube_And_Partners_Settings_View_Frequency_Cap_Time_Unit_Lifetime, Youtube_And_Partners_Settings_View_Frequency_Cap_Time_Unit_Months, Youtube_And_Partners_Settings_View_Frequency_Cap_Time_Unit_Weeks, Youtube_And_Partners_Settings_View_Frequency_Cap_Time_Unit_Days, Youtube_And_Partners_Settings_View_Frequency_Cap_Time_Unit_Hours, Youtube_And_Partners_Settings_View_Frequency_Cap_Time_Unit_Minutes, Youtube_And_Partners_Settings_View_Frequency_Cap_Time_Unit_Count, Youtube_And_Partners_Settings_View_Frequency_Cap_Max_Impressions, Youtube_And_Partners_Settings_View_Frequency_Cap_Max_Views, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Unspecified, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Moat, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Double_Verify, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Integral_Ad_Science, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Comscore, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Telemetry, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Meetrics, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Zefr, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Nielsen, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Kantar, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Dynata, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Viewability_Vendor_Placement, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Unspecified, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Moat, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Double_Verify, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Integral_Ad_Science, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Comscore, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Telemetry, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Meetrics, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Zefr, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Nielsen, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Kantar, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Dynata, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Safety_Vendor_Placement, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Unspecified, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Moat, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Double_Verify, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Integral_Ad_Science, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Comscore, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Telemetry, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Meetrics, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Zefr, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Nielsen, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Kantar, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Dynata, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Reach_Vendor_Placement, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Unspecified, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Moat, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Double_Verify, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Integral_Ad_Science, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Comscore, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Telemetry, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Meetrics, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Zefr, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Nielsen, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Kantar, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Dynata, Youtube_And_Partners_Settings_Third_Party_Measurement_Configs_Brand_Lift_Vendor_Placement, Youtube_And_Partners_Settings_Inventory_Source_Include, Youtube_And_Partners_Settings_Inventory_Source_Include_Google_Tv, Youtube_And_Partners_Settings_Inventory_Source_Include_Video, Youtube_And_Partners_Settings_Content_Category_Unspecified, Youtube_And_Partners_Settings_Content_Category_Standard, Youtube_And_Partners_Settings_Content_Category_Expanded, Youtube_And_Partners_Settings_Content_Category_Limited, Youtube_And_Partners_Settings_Effective_Content_Category_Unspecified, Youtube_And_Partners_Settings_Effective_Content_Category_Standard, Youtube_And_Partners_Settings_Effective_Content_Category_Expanded, Youtube_And_Partners_Settings_Effective_Content_Category_Limited, Youtube_And_Partners_Settings_Target_Frequency_Count, Youtube_And_Partners_Settings_Target_Frequency_Time_Unit_Unspecified, Youtube_And_Partners_Settings_Target_Frequency_Time_Unit_Lifetime, Youtube_And_Partners_Settings_Target_Frequency_Time_Unit_Months, Youtube_And_Partners_Settings_Target_Frequency_Time_Unit_Weeks, Youtube_And_Partners_Settings_Target_Frequency_Time_Unit_Days, Youtube_And_Partners_Settings_Target_Frequency_Time_Unit_Hours, Youtube_And_Partners_Settings_Target_Frequency_Time_Unit_Minutes, Youtube_And_Partners_Settings_Target_Frequency_Time_Unit_Count, Youtube_And_Partners_Settings_Linked_Merchant, Youtube_And_Partners_Settings_Related_Videos, Youtube_And_Partners_Settings_Lead_Form, Youtube_And_Partners_Settings_Video_Ad_Sequence_Minimum_Duration_Unspecified, Youtube_And_Partners_Settings_Video_Ad_Sequence_Minimum_Duration_Week, Youtube_And_Partners_Settings_Video_Ad_Sequence_Minimum_Duration_Month, Youtube_And_Partners_Settings_Video_Ad_Sequence_Steps_Step, Youtube_And_Partners_Settings_Video_Ad_Sequence_Steps_Group, Youtube_And_Partners_Settings_Video_Ad_Sequence_Steps_Previous_Step, Youtube_And_Partners_Settings_Video_Ad_Sequence_Steps_Interaction_Type_Unspecified, Youtube_And_Partners_Settings_Video_Ad_Sequence_Steps_Interaction_Type_Paid_View, Youtube_And_Partners_Settings_Video_Ad_Sequence_Steps_Interaction_Type_Skip, Youtube_And_Partners_Settings_Video_Ad_Sequence_Steps_Interaction_Type_Impression, Youtube_And_Partners_Settings_Video_Ad_Sequence_Steps_Interaction_Type_Engaged_Impression))
#WHERE value > Counter
"
        },
        "to": {
          "dataset": "mapper_dv360",
          "view": "Attributes_LineItems"
        }
      }
    }
  ]
}
